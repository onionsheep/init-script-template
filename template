#!/bin/sh
# chkconfig: 12345 99 10
# for chkconfig, 12345 is runlevel, 99 is start order, 10 is stop order
### BEGIN INIT INFO
# Provides:          service_name
# Required-Start:    $local_fs $network $named $portmap $remote_fs $syslog $time
# Required-Stop:     $local_fs $network $named $portmap $remote_fs $syslog $time
# Default-Start:     1 2 3 4 5
# Default-Stop:      0 6
# Short-Description: Start daemon at boot time
# Description:       Enable service provided by daemon.
### END INIT INFO
#
# 使用的时候需要替换dir,user,cmd,name四项。
# 其中name会用来作为日志文件，pid文件的文件名前缀
# name如果不给出的话，会用文件名替代，但是在查看服务状态的时候很有可能出问题
# 
dir="SERVICE_WORKING_DIRECTORY"
user="SERVICE_EXECUTOR_USERNAME"
cmd="SERVICE_START_COMMAND"
name="SERVICE_INTERNAL_NAME"

if [ -z "`echo $name|tr -d [:space:]`" ]; then
    name=`basename $0`
fi

pid_file="/var/run/$name.pid"
stdout_log="/var/log/$name.log"
stderr_log="/var/log/$name.err"

get_pid() {
    cat "$pid_file"
}

is_running() {
    [ -f "$pid_file" ] && ps `get_pid` > /dev/null 2>&1
}

case "$1" in
    start)
    if is_running; then
        echo "$name is already started"
    else
        echo "Starting $name"
        cd "$dir"
        su "$user" -c "$cmd" >> "$stdout_log" 2>> "$stderr_log" &
        echo $! > "$pid_file"
        for i in {1..60}
        do
            if is_running; then
                break
            fi
            echo -n "."
            sleep 1
        done
        if ! is_running; then
            echo "Unable to start $name, see $stdout_log and $stderr_log"
            exit 1
        fi
    fi
    ;;
    stop)
    if is_running; then
        echo -n "Stopping $name.."
        kill `get_pid`
        for i in {1..60}
        do
            if ! is_running; then
                break
            fi

            echo -n "."
            sleep 1
        done
        echo

        if is_running; then
            echo "$name may not stopped; may still be shutting down or shutdown may have failed"
            exit 1
        else
            echo "$name stopped"
            if [ -f "$pid_file" ]; then
                rm "$pid_file"
            fi
        fi
    else
        echo "$name is not running"
    fi
    ;;
    restart)
    $0 stop
    if is_running; then
        echo "Unable to stop $name, will not attempt to start"
        exit 1
    fi
    $0 start
    ;;
    status)
    if is_running; then
        echo "$name is running"
    else
        echo "$name is stopped"
        exit 1
    fi
    ;;
    *)
    echo "Usage: $0 {start|stop|restart|status}"
    exit 1
    ;;
esac

exit 0
